const e=JSON.parse('{"key":"v-1ad306b6","path":"/java/%E5%BE%AE%E6%9C%8D%E5%8A%A1SpringCloud%E7%AC%94%E8%AE%B0.html","title":"微服务SpringCloud","lang":"zh-CN","frontmatter":{"title":"微服务SpringCloud","author":"jimowo","icon":"java","date":"2023-07-09T00:00:00.000Z","order":6,"category":["Java","微服务"],"tag":["Java","SpringCloud"],"description":"微服务SpringCloud笔记 0 微服务架构理论 介绍 微服务架构提倡将单一的应用程序划分成一组小的服务，服务之间互相协调，为用户提供最终价值。每个服务运行在独立的进程中，服务与服务间采用轻量级的通信机制互相协作。 微服务的组成 服务注册与开发 eureka springboot 服务调用 feign 服务熔断 hystrix 负载均衡 ribbon 服务降级 hystrix 服务消息队列 RabbitMQ、Kafka 配置管理中心 spring cloud config 服务网关 zuul 服务监控 全链路追踪 自动化构建部署 服务定时任务、调度操作","head":[["meta",{"property":"og:url","content":"https://jimowo.github.io/java/%E5%BE%AE%E6%9C%8D%E5%8A%A1SpringCloud%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"博客|随笔|项目"}],["meta",{"property":"og:title","content":"微服务SpringCloud"}],["meta",{"property":"og:description","content":"微服务SpringCloud笔记 0 微服务架构理论 介绍 微服务架构提倡将单一的应用程序划分成一组小的服务，服务之间互相协调，为用户提供最终价值。每个服务运行在独立的进程中，服务与服务间采用轻量级的通信机制互相协作。 微服务的组成 服务注册与开发 eureka springboot 服务调用 feign 服务熔断 hystrix 负载均衡 ribbon 服务降级 hystrix 服务消息队列 RabbitMQ、Kafka 配置管理中心 spring cloud config 服务网关 zuul 服务监控 全链路追踪 自动化构建部署 服务定时任务、调度操作"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-23T14:37:42.000Z"}],["meta",{"property":"article:author","content":"jimowo"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"SpringCloud"}],["meta",{"property":"article:published_time","content":"2023-07-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-23T14:37:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"微服务SpringCloud\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-09T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-23T14:37:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"jimowo\\"}]}"]]},"headers":[{"level":2,"title":"0 微服务架构理论","slug":"_0-微服务架构理论","link":"#_0-微服务架构理论","children":[{"level":3,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":3,"title":"微服务的组成","slug":"微服务的组成","link":"#微服务的组成","children":[]},{"level":3,"title":"SpringCloud 简介","slug":"springcloud-简介","link":"#springcloud-简介","children":[]}]},{"level":2,"title":"1 微服务治理","slug":"_1-微服务治理","link":"#_1-微服务治理","children":[{"level":3,"title":"1.1 认识微服务","slug":"_1-1-认识微服务","link":"#_1-1-认识微服务","children":[]},{"level":3,"title":"1.2 分布式服务架构案例","slug":"_1-2-分布式服务架构案例","link":"#_1-2-分布式服务架构案例","children":[]},{"level":3,"title":"1.3 eureka 注册中心","slug":"_1-3-eureka-注册中心","link":"#_1-3-eureka-注册中心","children":[]},{"level":3,"title":"1.4 Ribbon 负载均衡原理","slug":"_1-4-ribbon-负载均衡原理","link":"#_1-4-ribbon-负载均衡原理","children":[]},{"level":3,"title":"1.5 nacos 注册中心","slug":"_1-5-nacos-注册中心","link":"#_1-5-nacos-注册中心","children":[]},{"level":3,"title":"1.6 Eureka和Nacos比较","slug":"_1-6-eureka和nacos比较","link":"#_1-6-eureka和nacos比较","children":[]}]},{"level":2,"title":"2 Nacos配置管理","slug":"_2-nacos配置管理","link":"#_2-nacos配置管理","children":[{"level":3,"title":"2.1 统一配置管理","slug":"_2-1-统一配置管理","link":"#_2-1-统一配置管理","children":[]},{"level":3,"title":"2.2 配置热更新","slug":"_2-2-配置热更新","link":"#_2-2-配置热更新","children":[]},{"level":3,"title":"2.4 配置共享","slug":"_2-4-配置共享","link":"#_2-4-配置共享","children":[]},{"level":3,"title":"2.5 搭建Nacos集群","slug":"_2-5-搭建nacos集群","link":"#_2-5-搭建nacos集群","children":[]},{"level":3,"title":"2.6 Http客户端Feign","slug":"_2-6-http客户端feign","link":"#_2-6-http客户端feign","children":[]},{"level":3,"title":"2.7 统一网关Gateway","slug":"_2-7-统一网关gateway","link":"#_2-7-统一网关gateway","children":[]}]},{"level":2,"title":"3 Docker 入门","slug":"_3-docker-入门","link":"#_3-docker-入门","children":[{"level":3,"title":"3.1 什么是Docker","slug":"_3-1-什么是docker","link":"#_3-1-什么是docker","children":[]},{"level":3,"title":"3.2 Docker 和虚拟机的区别","slug":"_3-2-docker-和虚拟机的区别","link":"#_3-2-docker-和虚拟机的区别","children":[]},{"level":3,"title":"3.3 Docker 架构","slug":"_3-3-docker-架构","link":"#_3-3-docker-架构","children":[]},{"level":3,"title":"3.4 安装Docker","slug":"_3-4-安装docker","link":"#_3-4-安装docker","children":[]},{"level":3,"title":"3.5 Docker 基本操作","slug":"_3-5-docker-基本操作","link":"#_3-5-docker-基本操作","children":[]},{"level":3,"title":"3.6 容器操作","slug":"_3-6-容器操作","link":"#_3-6-容器操作","children":[]},{"level":3,"title":"3.7 数据卷操作","slug":"_3-7-数据卷操作","link":"#_3-7-数据卷操作","children":[]},{"level":3,"title":"3.8 Dockerfile 自定义镜像","slug":"_3-8-dockerfile-自定义镜像","link":"#_3-8-dockerfile-自定义镜像","children":[]},{"level":3,"title":"3.9 DockerCompose","slug":"_3-9-dockercompose","link":"#_3-9-dockercompose","children":[]}]}],"git":{"createdTime":1688780897000,"updatedTime":1690123062000,"contributors":[{"name":"jimowo","email":"1252480844@qq.com","commits":5}]},"readingTime":{"minutes":28.18,"words":8455},"filePathRelative":"java/微服务SpringCloud笔记.md","localizedDate":"2023年7月9日","excerpt":"<h1> 微服务SpringCloud笔记</h1>\\n<h2> 0 微服务架构理论</h2>\\n<h3> 介绍</h3>\\n<p>微服务架构提倡将单一的应用程序划分成一组小的服务，服务之间互相协调，为用户提供最终价值。每个服务运行在<strong>独立的进程</strong>中，服务与服务间采用轻量级的通信机制互相协作。</p>\\n<h3> 微服务的组成</h3>\\n<ol>\\n<li>服务注册与开发 eureka springboot</li>\\n<li>服务调用 feign</li>\\n<li>服务熔断 hystrix</li>\\n<li>负载均衡 ribbon</li>\\n<li>服务降级 hystrix</li>\\n<li>服务消息队列 RabbitMQ、Kafka</li>\\n<li>配置管理中心 spring cloud config</li>\\n<li>服务网关 zuul</li>\\n<li>服务监控</li>\\n<li>全链路追踪</li>\\n<li>自动化构建部署</li>\\n<li>服务定时任务、调度操作</li>\\n</ol>","autoDesc":true}');export{e as data};
