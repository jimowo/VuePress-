const n=JSON.parse('{"key":"v-37927d9c","path":"/leetcode/%E5%89%91%E6%8C%87Offer.html","title":"剑指Offer","lang":"zh-CN","frontmatter":{"title":"剑指Offer","author":"jimowo","icon":"rank","date":"2022-07-26T00:00:00.000Z","order":2,"category":["算法"],"tag":["刷题","排序","剑指Offer"],"description":"剑指Offer刷题 剑指 Offer 13. 机器人的运动范围 思路 有约束的dfs题 输入给了二维数组信息和约束条件 返回值为int 题解 class Solution { public int movingCount(int m, int n, int k) { // 生成二维方格数组 int[][] board = new int[m][n]; return dfs(board, 0, 0, k); } int dfs(int[][] board, int i, int j, int k) { // 如果超出数组边界，数位和大于k，走到遍历过的区域返回0 if(i &gt;= board.length || i &lt; 0 || j &gt;= board[0].length || j &lt; 0 || calcSum(i) + calcSum(j) &gt; k || board[i][j] == -1) return 0; // 防止访问同一片区域 遍历过的区域打上标记 board[i][j] = -1; return 1 + dfs(board, i + 1, j, k) + dfs(board, i - 1, j, k) + dfs(board, i, j + 1, k) + dfs(board, i , j - 1, k); } // 计算一个数的数位之和 static int calcSum(int x) { int sum = 0; while (x != 0) { sum += x % 10; x /= 10; } return sum; } }","head":[["meta",{"property":"og:url","content":"https://jimowo.github.io/leetcode/%E5%89%91%E6%8C%87Offer.html"}],["meta",{"property":"og:site_name","content":"博客|随笔|项目"}],["meta",{"property":"og:title","content":"剑指Offer"}],["meta",{"property":"og:description","content":"剑指Offer刷题 剑指 Offer 13. 机器人的运动范围 思路 有约束的dfs题 输入给了二维数组信息和约束条件 返回值为int 题解 class Solution { public int movingCount(int m, int n, int k) { // 生成二维方格数组 int[][] board = new int[m][n]; return dfs(board, 0, 0, k); } int dfs(int[][] board, int i, int j, int k) { // 如果超出数组边界，数位和大于k，走到遍历过的区域返回0 if(i &gt;= board.length || i &lt; 0 || j &gt;= board[0].length || j &lt; 0 || calcSum(i) + calcSum(j) &gt; k || board[i][j] == -1) return 0; // 防止访问同一片区域 遍历过的区域打上标记 board[i][j] = -1; return 1 + dfs(board, i + 1, j, k) + dfs(board, i - 1, j, k) + dfs(board, i, j + 1, k) + dfs(board, i , j - 1, k); } // 计算一个数的数位之和 static int calcSum(int x) { int sum = 0; while (x != 0) { sum += x % 10; x /= 10; } return sum; } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T13:50:56.000Z"}],["meta",{"property":"article:author","content":"jimowo"}],["meta",{"property":"article:tag","content":"刷题"}],["meta",{"property":"article:tag","content":"排序"}],["meta",{"property":"article:tag","content":"剑指Offer"}],["meta",{"property":"article:published_time","content":"2022-07-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T13:50:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"剑指Offer\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-01T13:50:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"jimowo\\"}]}"]]},"headers":[{"level":2,"title":"剑指 Offer 13. 机器人的运动范围","slug":"剑指-offer-13-机器人的运动范围","link":"#剑指-offer-13-机器人的运动范围","children":[{"level":3,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":3,"title":"题解","slug":"题解","link":"#题解","children":[]}]},{"level":2,"title":"剑指 Offer 14- I. 剪绳子","slug":"剑指-offer-14-i-剪绳子","link":"#剑指-offer-14-i-剪绳子","children":[{"level":3,"title":"思路","slug":"思路-1","link":"#思路-1","children":[]},{"level":3,"title":"题解","slug":"题解-1","link":"#题解-1","children":[]}]},{"level":2,"title":"剑指 Offer 14- II. 剪绳子 II","slug":"剑指-offer-14-ii-剪绳子-ii","link":"#剑指-offer-14-ii-剪绳子-ii","children":[{"level":3,"title":"思路","slug":"思路-2","link":"#思路-2","children":[]},{"level":3,"title":"题解","slug":"题解-2","link":"#题解-2","children":[]}]},{"level":2,"title":"剑指 Offer 16. 数值的整数次方","slug":"剑指-offer-16-数值的整数次方","link":"#剑指-offer-16-数值的整数次方","children":[{"level":3,"title":"思路","slug":"思路-3","link":"#思路-3","children":[]}]}],"git":{"createdTime":1690273270000,"updatedTime":1690897856000,"contributors":[{"name":"jimowo","email":"1252480844@qq.com","commits":3}]},"readingTime":{"minutes":2.38,"words":713},"filePathRelative":"leetcode/剑指Offer.md","localizedDate":"2022年7月26日","excerpt":"<h1> 剑指Offer刷题</h1>\\n<h2> <a href=\\"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">剑指 Offer 13. 机器人的运动范围</a></h2>\\n<h3> 思路</h3>\\n<p>有约束的dfs题</p>\\n<p>输入给了二维数组信息和约束条件</p>\\n<p>返回值为int</p>\\n<h3> 题解</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Solution</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">movingCount</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> m<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> n<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> k<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 生成二维方格数组</span>\\n        <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> board <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">[</span>m<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>n<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">dfs</span><span class=\\"token punctuation\\">(</span>board<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> k<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">dfs</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> board<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> i<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> j<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> k<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 如果超出数组边界，数位和大于k，走到遍历过的区域返回0</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">&gt;=</span> board<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">||</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">||</span>\\n            j <span class=\\"token operator\\">&gt;=</span> board<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">||</span> j <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">||</span>\\n            <span class=\\"token function\\">calcSum</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token function\\">calcSum</span><span class=\\"token punctuation\\">(</span>j<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> k <span class=\\"token operator\\">||</span>\\n            board<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 防止访问同一片区域 遍历过的区域打上标记</span>\\n        board<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">+</span> <span class=\\"token function\\">dfs</span><span class=\\"token punctuation\\">(</span>board<span class=\\"token punctuation\\">,</span> i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> j<span class=\\"token punctuation\\">,</span> k<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token function\\">dfs</span><span class=\\"token punctuation\\">(</span>board<span class=\\"token punctuation\\">,</span> i <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> j<span class=\\"token punctuation\\">,</span> k<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> \\n                      <span class=\\"token function\\">dfs</span><span class=\\"token punctuation\\">(</span>board<span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">,</span> j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> k<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token function\\">dfs</span><span class=\\"token punctuation\\">(</span>board<span class=\\"token punctuation\\">,</span> i <span class=\\"token punctuation\\">,</span> j <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> k<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 计算一个数的数位之和</span>\\n    <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">calcSum</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> x<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">int</span> sum <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">!=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            sum <span class=\\"token operator\\">+=</span> x <span class=\\"token operator\\">%</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span>\\n            x <span class=\\"token operator\\">/=</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> sum<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
