const t=JSON.parse('{"key":"v-8e79cd5e","path":"/cpp/Cpp%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92.html","title":"Cpp补完计划","lang":"zh-CN","frontmatter":{"title":"Cpp补完计划","author":"jimowo","icon":"c","date":"2023-01-09T00:00:00.000Z","category":["C++"],"tag":["C++","指针"],"description":"Cpp补完计划 1 智能指针 C++11 提供3种智能指针 unique_ptr, shared_ptr, weak_ptr 1.1 几个简单例子 #include &lt;memory&gt; #include &lt;iostream&gt; using namespace std; int main() { unique_ ptr&lt;int&gt; up1 (new int (11)) ; //无法复制的unique_ ptr unique_ ptr&lt;int&gt; up2 = up1; //不能通过编译 cout &lt;&lt; *up1 &lt;&lt; endl; // 11 unique_ ptr&lt;int&gt; up3 = move (up1); //现在p3是数据唯- -的unique_ ptr 智能指针 cout &lt;&lt; *up3 &lt;&lt; endl ; // 11 cout &lt;&lt; *up1 &lt;&lt; endl ; //运行时错误 up3.reset(); //显式释放内存 up1.reset(); //不会导致运行时错误 cout &lt;&lt; *up3 &lt;&lt; endl; //运行时错误 shared_ ptr&lt;int&gt; sp1 (new int(22)); shared_ ptr&lt;int&gt; sp2 = sp1; cout &lt;&lt; *sp1 &lt;&lt; endl; // 22 cout &lt;&lt; *sp2 &lt;&lt; endl; // 22 sp1.reset() ; cout &lt;&lt; *sp2 &lt;&lt; endl;// 22 }","head":[["meta",{"property":"og:url","content":"https://jimowo.github.io/cpp/Cpp%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92.html"}],["meta",{"property":"og:site_name","content":"博客|随笔|项目"}],["meta",{"property":"og:title","content":"Cpp补完计划"}],["meta",{"property":"og:description","content":"Cpp补完计划 1 智能指针 C++11 提供3种智能指针 unique_ptr, shared_ptr, weak_ptr 1.1 几个简单例子 #include &lt;memory&gt; #include &lt;iostream&gt; using namespace std; int main() { unique_ ptr&lt;int&gt; up1 (new int (11)) ; //无法复制的unique_ ptr unique_ ptr&lt;int&gt; up2 = up1; //不能通过编译 cout &lt;&lt; *up1 &lt;&lt; endl; // 11 unique_ ptr&lt;int&gt; up3 = move (up1); //现在p3是数据唯- -的unique_ ptr 智能指针 cout &lt;&lt; *up3 &lt;&lt; endl ; // 11 cout &lt;&lt; *up1 &lt;&lt; endl ; //运行时错误 up3.reset(); //显式释放内存 up1.reset(); //不会导致运行时错误 cout &lt;&lt; *up3 &lt;&lt; endl; //运行时错误 shared_ ptr&lt;int&gt; sp1 (new int(22)); shared_ ptr&lt;int&gt; sp2 = sp1; cout &lt;&lt; *sp1 &lt;&lt; endl; // 22 cout &lt;&lt; *sp2 &lt;&lt; endl; // 22 sp1.reset() ; cout &lt;&lt; *sp2 &lt;&lt; endl;// 22 }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-08T03:15:17.000Z"}],["meta",{"property":"article:author","content":"jimowo"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"指针"}],["meta",{"property":"article:published_time","content":"2023-01-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-08T03:15:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cpp补完计划\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-09T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-08T03:15:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"jimowo\\"}]}"]]},"headers":[{"level":2,"title":"1 智能指针","slug":"_1-智能指针","link":"#_1-智能指针","children":[{"level":3,"title":"1.1 几个简单例子","slug":"_1-1-几个简单例子","link":"#_1-1-几个简单例子","children":[]}]}],"git":{"createdTime":1688780897000,"updatedTime":1688786117000,"contributors":[{"name":"jimowo","email":"1252480844@qq.com","commits":2}]},"readingTime":{"minutes":2.15,"words":644},"filePathRelative":"cpp/Cpp补完计划.md","localizedDate":"2023年1月9日","excerpt":"<h1> Cpp补完计划</h1>\\n<h2> 1 智能指针</h2>\\n<p>C++11 提供3种智能指针 unique_ptr, shared_ptr, weak_ptr</p>\\n<h3> 1.1 几个简单例子</h3>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"language-c++\\"><code>#include &lt;memory&gt;\\n#include &lt;iostream&gt;\\nusing namespace std;\\nint main() {\\n    unique_ ptr&lt;int&gt; up1 (new int (11)) ; //无法复制的unique_ ptr\\n    unique_ ptr&lt;int&gt; up2 = up1; //不能通过编译\\n    cout &lt;&lt; *up1 &lt;&lt; endl; // 11\\n    unique_ ptr&lt;int&gt; up3 = move (up1); //现在p3是数据唯- -的unique_ ptr 智能指针\\n    cout &lt;&lt; *up3 &lt;&lt; endl ; // 11\\n    cout &lt;&lt; *up1 &lt;&lt; endl ; //运行时错误\\n    up3.reset(); //显式释放内存\\n    up1.reset(); //不会导致运行时错误\\n    cout &lt;&lt; *up3 &lt;&lt; endl; //运行时错误\\n    shared_ ptr&lt;int&gt; sp1 (new int(22));\\n    shared_ ptr&lt;int&gt; sp2 = sp1;\\n    cout &lt;&lt; *sp1 &lt;&lt; endl; // 22\\n    cout &lt;&lt; *sp2 &lt;&lt; endl; // 22\\n    sp1.reset() ;\\n    cout &lt;&lt; *sp2 &lt;&lt; endl;// 22\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
